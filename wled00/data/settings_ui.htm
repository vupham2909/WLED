<!DOCTYPE html>
<html>
  <head lang="en">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=500" />
    <title>Cài đặt giao diện người dùng</title>
    <script>
      var d = document;
      var initial_ds, initial_st;
      var sett = null;
      var l = {
        comp: {
          labels: "Hiển thị nhãn nút",
          colors: {
            LABEL: "Phương thức chọn màu",
            picker: "Vòng tròn màu",
            rgb: "Thanh kéo RGB",
            quick: "Chọn màu nhanh",
            hex: "Nhập mã màu HEX",
          },
          pcmbot: "Hiện thanh di chuyển bên dưới ở chế độ PC",
          pid: "Hiện ID của các bảng cài đặt sẵn",
          seglen: "Tùy chỉnh chiều dài của từng đoạn thay vì ngừng LED",
          css: "Cho phép tùy chỉnh CSS",
          hdays: "Bật chế độ tùy chỉnh giao diện theo lễ hội",
        },
        theme: {
          alpha: {
            bg: "Nền mờ",
            tab: "Nút mờ",
          },
          bg: {
            url: "Đường dẫn hình nền",
            random: "Hình nền ngẫu nhiên",
          },
          color: {
            bg: "Mã màu HEX cho nền",
          },
        },
      };
      function gId(s) {
        return d.getElementById(s);
      }
      function isObject(item) {
        return item && typeof item === "object" && !Array.isArray(item);
      }
      function set(path, obj, val) {
        var tar = obj;
        var pList = path.split("_");
        var len = pList.length;
        for (var i = 0; i < len - 1; i++) {
          var elem = pList[i];
          if (!tar[elem]) tar[elem] = {};
          tar = tar[elem];
        }
        tar[pList[len - 1]] = val;
      }
      var timeout;
      function showToast(text, error = false) {
        var x = gId("toast");
        x.innerHTML = text;
        x.className = error ? "error" : "show";
        clearTimeout(timeout);
        x.style.animation = "none";
        timeout = setTimeout(function () {
          x.className = x.className.replace("show", "");
        }, 2900);
      }
      function addRec(s, path = "", label = null) {
        var str = "";
        for (i in s) {
          var fk = path + (path ? "_" : "") + i;
          if (isObject(s[i])) {
            if (label && label[i] && label[i]["LABEL"])
              str += `<h3>${label[i]["LABEL"]}</h3>`;
            str += addRec(s[i], fk, label ? label[i] : null);
          } else {
            var lb = fk;
            if (label && label[i]) lb = label[i];
            else if (s[i + "LABEL"]) lb = s[i + "LABEL"];
            if (i.indexOf("LABEL") > 0) continue;
            var t = typeof s[i];
            if (gId(fk)) {
              //already exists
              if (t === "boolean") {
                gId(fk).checked = s[i];
              } else {
                gId(fk).value = s[i];
              }
              if (gId(fk).previousElementSibling.matches(".l")) {
                gId(fk).previousElementSibling.innerHTML = lb;
              }
            } else {
              if (t === "boolean") {
                str += `${lb}: <input class="agi cb" type="checkbox" id=${fk} ${
                  s[i] ? "checked" : ""
                }><br>`;
              } else if (t === "number") {
                str += `${lb}: <input class="agi" type="number" id=${fk} value=${s[i]}><br>`;
              } else if (t === "string") {
                str += `${lb}:<br><input class="agi" id=${fk} value=${s[i]}><br>`;
              }
            }
          }
        }
        return str;
      }

      function genForm(s) {
        var str = "";
        str = addRec(s, "", l);

        gId("gen").innerHTML = str;
      }
      function GetLS() {
        sett = localStorage.getItem("wledUiCfg");
        if (!sett) gId("lserr").style.display = "inline";
        try {
          sett = JSON.parse(sett);
        } catch (e) {
          sett = {};
          gId("lserr").style.display = "inline";
          gId("lserr").innerHTML =
            "&#9888; Settings JSON parsing failed. (" + e + ")";
        }
        genForm(sett);
        gId("dm").checked = gId("theme_base").value === "light";
      }

      function SetLS() {
        var l = d.querySelectorAll(".agi");
        for (var i = 0; i < l.length; i++) {
          var e = l[i];
          var val = e.classList.contains("cb") ? e.checked : e.value;
          set(e.id, sett, val);
          console.log(`${e.id} set to ${val}`);
        }
        try {
          localStorage.setItem("wledUiCfg", JSON.stringify(sett));
          gId("lssuc").style.display = "inline";
        } catch (e) {
          gId("lssuc").style.display = "none";
          gId("lserr").style.display = "inline";
          gId("lserr").innerHTML =
            "&#9888; Settings JSON saving failed. (" + e + ")";
        }
      }

      function Save() {
        SetLS();
        if (d.Sf.DS.value != initial_ds || d.Sf.ST.checked != initial_st)
          d.Sf.submit();
      }

      function S() {
        GetV();
        initial_ds = d.Sf.DS.value;
        initial_st = d.Sf.ST.checked;
        GetLS();
      }
      function H() {
        window.open(
          "https://nghienrgb.com/t/wled-huong-dan-chuc-nang-cai-dat-giao-dien-nguoi-dung/31"
        );
      }
      function B() {
        window.open("/settings", "_self");
      }
      function UI() {
        gId("idonthateyou").style.display = gId("dm").checked
          ? "inline"
          : "none";
        var f = gId("theme_base");
        if (f) f.value = gId("dm").checked ? "light" : "dark";
      }

      // random BG image
      function setRandomBg() {
        if (gId("theme_bg_random").checked) {
          gId("theme_bg_url").value = "https://picsum.photos/1920/1080";
        } else {
          gId("theme_bg_url").value = "";
        }
      }
      function checkRandomBg() {
        if (gId("theme_bg_url").value === "https://picsum.photos/1920/1080") {
          gId("theme_bg_random").checked = true;
        } else {
          gId("theme_bg_random").checked = false;
        }
      }
      function uploadFile(fO, name) {
        var req = new XMLHttpRequest();
        req.addEventListener("load", function () {
          showToast(this.responseText);
        });
        req.addEventListener("error", function (e) {
          showToast(e.stack, true);
        });
        req.open("POST", "/upload");
        var formData = new FormData();
        formData.append("data", fO.files[0], name);
        req.send(formData);
        fO.value = "";
        return false;
      }
      function GetV() {
        var d = document;
      }
    </script>
    <style>
      @import url("style.css");
    </style>
  </head>
  <body onload="S()">
    <form id="form_s" name="Sf" method="post">
      <div style="position: sticky; top: 0; background-color: #222">
        <div class="helpB"><button type="button" onclick="H()">?</button></div>
        <button type="button" onclick="B()">Quay lại</button
        ><button type="button" onclick="Save()">Lưu lại</button><br />
        <span id="lssuc" style="color: green; display: none"
          >&#10004; Đã lưu thành công thay đổi giao diện!</span
        >
        <span id="lserr" style="color: red; display: none"
          >&#9888; Không thể kết nối tới bộ nhớ của mạch điều khiển. Vui lòng
          đảm bảo là trình duyệt của bạn không chặn kết nối.</span
        >
        <hr />
      </div>
      <h2>Cài đặt trang web</h2>
      Tên đèn: <input name="DS" maxlength="32" /><br />
      Nút đồng bộ sẽ hiển thị cho cả hai trạng thái nhận và gửi:
      <input type="checkbox" name="ST" /><br />
      <i
        >Những tùy chỉnh sau đây là duy nhất cho cả thiết bị WLED cũng như là
        trình duyệt này.<br />
        Bạn sẽ phải chọn lại lần nữa nếu bạn sử dụng trình duyệt khác, thiết bị
        khác hoặc địa chỉ IP của WLED bị thay đổi.<br />
        Hãy tải lại để áp dụng thay đổi.</i
      ><br />

      <div id="gen">Đang tải cài đặt...</div>

      <h3>Giao diện người dùng</h3>
      <span class="l"></span>:
      <input type="checkbox" id="comp_labels" class="agi cb" /><br />
      <span class="l"></span>:
      <input type="checkbox" id="comp_pcmbot" class="agi cb" /><br />
      <span class="l"></span>:
      <input type="checkbox" id="comp_pid" class="agi cb" /><br />
      <span class="l"></span>:
      <input type="checkbox" id="comp_seglen" class="agi cb" /><br />
      Tôi rất ghét dark mode:
      <input type="checkbox" id="dm" onchange="UI()" /><br />
      <span id="idonthateyou" style="display: none"
        ><i>Tại sao bạn lại ghét dark mode nhỉ? </i>&#x1F97A;<br
      /></span>
      <span class="l"></span>:
      <input
        type="number"
        min="0.0"
        max="1.0"
        step="0.01"
        id="theme_alpha_tab"
        class="agi"
      /><br />
      <span class="l"></span>:
      <input
        type="number"
        min="0.0"
        max="1.0"
        step="0.01"
        id="theme_alpha_bg"
        class="agi"
      /><br />
      <span class="l"></span>:
      <input id="theme_color_bg" maxlength="9" class="agi" /><br />
      <span class="l">Đường dẫn của hình nền</span>:
      <input id="theme_bg_url" class="agi" oninput="checkRandomBg()" /><br />
      <span class="l">Hình nền ngẫu nhiên</span>:
      <input
        type="checkbox"
        id="theme_bg_random"
        class="agi cb"
        onchange="setRandomBg()"
      /><br />
      <input id="theme_base" class="agi" style="display: none" />
      <span class="l"></span>:
      <input type="checkbox" id="comp_css" class="agi cb" /><br />
      <div id="skin">
        Tùy chọn CSS: <input type="file" name="data" accept=".css" />
        <input
          type="button"
          value="Upload"
          onclick="uploadFile(d.Sf.data,'/skin.css');"
        /><br />
      </div>
      <span class="l"></span>:
      <input type="checkbox" id="comp_hdays" class="agi cb" /><br />
      <div id="holidays">
        Theme lễ hội: <input type="file" name="data2" accept=".json" />
        <input
          type="button"
          value="Upload"
          onclick="uploadFile(d.Sf.data2,'/holidays.json');"
        /><br />
      </div>
      <div id="toast"></div>
      <hr />
      <button type="button" onclick="B()">Quay lại</button
      ><button type="button" onclick="Save()">Lưu lại</button>
    </form>
  </body>
</html>
